install.packages("swirl")
q()
x <- c(.5,.6)
x<-c(T,F)
x<- 9:29
x<-vector("numeric",length=10)
x<-vector(1.7,length=10)
x<-c(1.7,"at")
as.logical(x)
as.character(x)
install.packages("swirl")
x<-list(1,"a",TRUE,1+4i)
x
m<-matrix(nrow=2,ncol = 3)
m
dim(m)
attributes(m)
m[1][1] = 1
m
m<-matrix(1:6 ,nrow=2,ncol = 3)
m<-matrix(1:2 ,nrow=2,ncol = 3)
m
m<-matrix(1:3 ,nrow=2,ncol = 3)
m
x<-c(1,2,3)
x
y<-(5,6)
y<-c(5,6)
cbind(x,y)
y<-(5,6,7)
y<-c(5,6,7)
cbind(x,y)
z = c(9,10,11)
cbind(x,y,z)
x<-factor(c("yes","yes",no,no))
x<-factor(c("yes","yes","no","no"))
table(x)
attr(x)
attr(,"levels")
m<-matrix(2,3)
m
x<- data.frame(foo=1:4,bar=c(T,T,T))
x<- data.frame(foo=1:4,bar=c(T,T,T,F))
row.names(x)
library(swirl)
swirl()
warnings()
library(swirl)
swirl()
?<<-
source('~/datasciencecoursera/R_intro/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/R_intro/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(1:6,2,3)
mat
mat <- matrix(1:4,2,2)
mat
special_mat <- makeCacheMatrix(mat)
inv <- cacheSolve(special_mat)
inv
inv <-cacheSolve(special_mat)
inv
swirl()
head(flags)
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
head(unique_vals)
unique_vals
lappy(unique_vals,length)
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) return(elem[2]))
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
ssapply(flags,class)
sapply(flags,class)
sapply(flags,class,character(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
?mapply
?apply
install.packages("httpuv")
?list
library(httr)
?stop_for_status
sqldf
?sqldf
??sqldf
install.packages("sqldf")
setwd("~/datasciencecoursera")
setwd("~/datasciencecoursera/cleaning_data/week2")
data <- read.csv('data.csv')
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv('data.csv')
sqldf("select pwgtp1 from acs where AGEP < 50")
res <- sqldf("select pwgtp1 from acs where AGEP < 50")
class(res)
head(res)
head(sqldf("select distinct AGEP from acs"))
head(sqldf("select unique AGEP from acs"))
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
?nchar
l1 <- readline(con)
l1
l1 <- readline(con)
l1
l1 <- readline(con)
l1 <- readline(con)
l1 <- readlines(con)
l1 <- readLines(con)
l1
nchar(l1[c(1,2)])
nchar(l1[c(10,20,30,100)])
df<- read.fwf('data2.for')
df<- read.fwf('data2.for',widths = 9)
head(df)
sum(df[,4])
ncol(df)
df<- read.fwf('data2.for',widths = c(9,4,2,4,2,4,2,4,2)
)
head(df)
df<- read.fwf('data2.for')
df<- read.fwf('data2.for',widths = c(10,9,3,9,3,9,3,9,3))
head(df)
df<- read.fwf('data2.for',widths = c(10,9,2,9,3,9,3,9,3))
head(df)
df<- read.fwf('data2.for',widths = c(10,9,3,9,3,9,3,9,3))
head(df)
df<- read.fwf('data2.for',widths = c(10,9,4,9,4,9,4,9,4))
head(df)
sum(df[,4])
